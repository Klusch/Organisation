# Allgemeine Informationen
spring.application.name = @project.name@

# Database H2
spring.h2.console.enabled = true

# Tomcat
server.port = 8000
server.tomcat.accesslog.enabled = true
server.tomcat.accesslog.pattern = %h %t "%r" %s %b

# Thymeleaf (only dev)
spring.thymeleaf.cache = false

# mySQL
spring.datasource.url=jdbc:mysql://localhost:3306/organisation
spring.datasource.username=dbuser
spring.datasource.password=dbpass
#spring.datasource.driver-class-name=com.mysql.jdbc.Driver
spring.datasource.driver-class-name=org.mariadb.jdbc.Driver
#spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5Dialect
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5InnoDBDialect

# Keep the connection alive if idle for a long time (needed in production)
spring.datasource.testWhileIdle = true
spring.datasource.validationQuery = SELECT 1

# Show or not log for each sql query
spring.jpa.show-sql = false
# true

# Hibernate ddl auto (create, create-drop, update)
spring.jpa.hibernate.ddl-auto = update

# Naming strategy
#spring.jpa.hibernate.naming-strategy = org.hibernate.cfg.ImprovedNamingStrategy
spring.jpa.hibernate.naming-strategy = org.hibernate.cfg.SpringPhysicalNamingStrategy

# Use spring.jpa.properties.* for Hibernate native properties (the prefix is
# stripped before adding them to the entity manager)

# Level for loggers on classes inside the root package "hello.controllers" (and its 
# sub-packages)
# Available levels are: TRACE, DEBUG, INFO, WARN, ERROR, FATAL, OFF
logging.level.hello.controllers = DEBUG

# Specify the level for spring boot and hibernate's loggers
logging.level.org.springframework.web = ERROR
logging.level.org.hibernate = ERROR

# Log file location (in addition to the console)
logging.file = logs/application.log

# Upload Limits
spring.http.multipart.max-file-size=128KB
spring.http.multipart.max-request-size=128KB





